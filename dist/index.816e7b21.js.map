{"mappings":"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","sources":["src/app.js"],"sourcesContent":["const APIController = (function() {\n\n    const clientId = '87bccbeb23114d44b788fd6cea0511b1';\n    const clientSecret = '2b6c6f0ac7bc45a8b23bb33510a6182b';\n\n    // private methods\n    const _getToken = async () => {\n\n        const result = await fetch('https://accounts.spotify.com/api/token', {\n            method: 'POST',\n            headers: {\n                'Content-Type' : 'application/x-www-form-urlencoded',\n                'Authorization' : 'Basic ' + btoa(clientId + ':' + clientSecret)\n            },\n            body: 'grant_type=client_credentials'\n        });\n\n        const data = await result.json();\n        return data.access_token;\n    }\n\n    const _getGenres = async (token) => {\n\n        const result = await fetch(`https://api.spotify.com/v1/browse/categories?locale=sv_US`, {\n            method: 'GET',\n            headers: { 'Authorization' : 'Bearer ' + token}\n        });\n\n        const data = await result.json();\n        return data.categories.items;\n    }\n\n    const _getPlaylistByGenre = async (token, genreId) => {\n\n        const limit = 20;\n\n        const result = await fetch(`https://api.spotify.com/v1/browse/categories/${genreId}/playlists?limit=${limit}`, {\n            method: 'GET',\n            headers: { 'Authorization' : 'Bearer ' + token}\n        });\n\n        const data = await result.json();\n        return data.playlists.items;\n    }\n\n    const _getTracks = async (token, tracksEndPoint) => {\n\n        const limit = 20;\n\n        const result = await fetch(`${tracksEndPoint}?limit=${limit}`, {\n            method: 'GET',\n            headers: { 'Authorization' : 'Bearer ' + token}\n        });\n\n        const data = await result.json();\n        return data.items;\n    }\n\n    const _getTrack = async (token, trackEndPoint) => {\n\n        const result = await fetch(`${trackEndPoint}`, {\n            method: 'GET',\n            headers: { 'Authorization' : 'Bearer ' + token}\n        });\n\n        const data = await result.json();\n        return data;\n    }\n\n    return {\n        getToken() {\n            return _getToken();\n        },\n        getGenres(token) {\n            return _getGenres(token);\n        },\n        getPlaylistByGenre(token, genreId) {\n            return _getPlaylistByGenre(token, genreId);\n        },\n        getTracks(token, tracksEndPoint) {\n            return _getTracks(token, tracksEndPoint);\n        },\n        getTrack(token, trackEndPoint) {\n            return _getTrack(token, trackEndPoint);\n        }\n    }\n})();\n\n\n// UI Module\nconst UIController = (function() {\n\n    //object to hold references to html selectors\n    const DOMElements = {\n        selectGenre: '#select_genre',\n        selectPlaylist: '#select_playlist',\n        buttonSubmit: '#btn_submit',\n        divSongDetail: '#song-detail',\n        hfToken: '#hidden_token',\n        divSonglist: '.song-list'\n    }\n\n    //public methods\n    return {\n\n        //method to get input fields\n        inputField() {\n            return {\n                genre: document.querySelector(DOMElements.selectGenre),\n                playlist: document.querySelector(DOMElements.selectPlaylist),\n                tracks: document.querySelector(DOMElements.divSonglist),\n                submit: document.querySelector(DOMElements.buttonSubmit),\n                songDetail: document.querySelector(DOMElements.divSongDetail)\n            }\n        },\n\n        // need methods to create select list option\n        createGenre(text, value) {\n            const html = `<option value=\"${value}\">${text}</option>`;\n            document.querySelector(DOMElements.selectGenre).insertAdjacentHTML('beforeend', html);\n        },\n\n        createPlaylist(text, value) {\n            const html = `<option value=\"${value}\">${text}</option>`;\n            document.querySelector(DOMElements.selectPlaylist).insertAdjacentHTML('beforeend', html);\n        },\n\n        // need method to create a track list group item\n        createTrack(id, name) {\n            const html = `<a href=\"#\" class=\"list-group-item list-group-item-action list-group-item-light\" id=\"${id}\">${name}</a>`;\n            document.querySelector(DOMElements.divSonglist).insertAdjacentHTML('beforeend', html);\n        },\n\n        // need method to create the song detail\n        createTrackDetail(img, title, artist) {\n\n            const detailDiv = document.querySelector(DOMElements.divSongDetail);\n            // any time user clicks a new song, we need to clear out the song detail div\n            detailDiv.innerHTML = '';\n\n            const html =\n                `\n            <div class=\"row col-sm-12 px-0\">\n                <img src=\"${img}\" alt=\"\">        \n            </div>\n            <div class=\"row col-sm-12 px-0\">\n                <label for=\"Genre\" class=\"form-label col-sm-12\">${title}:</label>\n            </div>\n            <div class=\"row col-sm-12 px-0\">\n                <label for=\"artist\" class=\"form-label col-sm-12\">By ${artist}:</label>\n            </div> \n            `;\n\n            detailDiv.insertAdjacentHTML('beforeend', html)\n        },\n\n        resetTrackDetail() {\n            this.inputField().songDetail.innerHTML = '';\n        },\n\n        resetTracks() {\n            this.inputField().tracks.innerHTML = '';\n            this.resetTrackDetail();\n        },\n\n        resetPlaylist() {\n            this.inputField().playlist.innerHTML = '';\n            this.resetTracks();\n        },\n\n        storeToken(value) {\n            document.querySelector(DOMElements.hfToken).value = value;\n        },\n\n        getStoredToken() {\n            return {\n                token: document.querySelector(DOMElements.hfToken).value\n            }\n        }\n    }\n\n})();\n\nconst APPController = (function(UICtrl, APICtrl) {\n\n    // get input field object ref\n    const DOMInputs = UICtrl.inputField();\n\n    // get genres on page load\n    const loadGenres = async () => {\n        //get the token\n        const token = await APICtrl.getToken();\n        //store the token onto the page\n        UICtrl.storeToken(token);\n        //get the genres\n        const genres = await APICtrl.getGenres(token);\n        //populate our genres select element\n        genres.forEach(element => UICtrl.createGenre(element.name, element.id));\n    }\n\n    // create genre change event listener\n    DOMInputs.genre.addEventListener('change', async () => {\n        //reset the playlist\n        UICtrl.resetPlaylist();\n        //get the token that's stored on the page\n        const token = UICtrl.getStoredToken().token;\n        // get the genre select field\n        const genreSelect = UICtrl.inputField().genre;\n        // get the genre id associated with the selected genre\n        const genreId = genreSelect.options[genreSelect.selectedIndex].value;\n        // ge the playlist based on a genre\n        const playlist = await APICtrl.getPlaylistByGenre(token, genreId);\n        // create a playlist list item for every playlist returned\n        playlist.forEach(p => UICtrl.createPlaylist(p.name, p.tracks.href));\n    });\n\n\n    // create submit button click event listener\n    DOMInputs.submit.addEventListener('click', async (e) => {\n        // prevent page reset\n        e.preventDefault();\n        // clear tracks\n        UICtrl.resetTracks();\n        //get the token\n        const token = UICtrl.getStoredToken().token;\n        // get the playlist field\n        const playlistSelect = UICtrl.inputField().playlist;\n        // get track endpoint based on the selected playlist\n        const tracksEndPoint = playlistSelect.options[playlistSelect.selectedIndex].value;\n        // get the list of tracks\n        const tracks = await APICtrl.getTracks(token, tracksEndPoint);\n        // create a track list item\n        tracks.forEach(el => UICtrl.createTrack(el.track.href, el.track.name))\n\n    });\n\n    // create song selection click event listener\n    DOMInputs.tracks.addEventListener('click', async (e) => {\n        // prevent page reset\n        e.preventDefault();\n        UICtrl.resetTrackDetail();\n        // get the token\n        const token = UICtrl.getStoredToken().token;\n        // get the track endpoint\n        const trackEndpoint = e.target.id;\n        //get the track object\n        const track = await APICtrl.getTrack(token, trackEndpoint);\n        // load the track details\n        UICtrl.createTrackDetail(track.album.images[2].url, track.name, track.artists[0].name);\n    });\n\n    return {\n        init() {\n            console.log('App is starting');\n            loadGenres();\n        }\n    }\n\n})(UIController, APIController);\n\n// will need to call a method to load the genres on page load\nAPPController.init();\n\n\nconsole.log()"],"names":[],"version":3,"file":"index.816e7b21.js.map","sourceRoot":"/__parcel_source_root/"}